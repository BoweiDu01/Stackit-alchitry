/*
   This file was generated automatically by Alchitry Labs version 1.2.7.
   Do not edit this file directly. Instead edit the original Lucid source.
   This is a temporary file and any changes made to it will be destroyed.
*/

module boolean_18 (
    input [15:0] a,
    input [15:0] b,
    input [5:0] alufn_signal,
    output reg [15:0] bool
  );
  
  
  
  wire [(5'h10+0)-1:0] M_muxs_out;
  reg [(5'h10+0)-1:0] M_muxs_s0;
  reg [(5'h10+0)-1:0] M_muxs_s1;
  reg [(5'h10+0)*4-1:0] M_muxs_in;
  
  genvar GEN_muxs0;
  generate
  for (GEN_muxs0=0;GEN_muxs0<5'h10;GEN_muxs0=GEN_muxs0+1) begin: muxs_gen_0
    mux_4_22 muxs (
      .s0(M_muxs_s0[GEN_muxs0*(1)+(1)-1-:(1)]),
      .s1(M_muxs_s1[GEN_muxs0*(1)+(1)-1-:(1)]),
      .in(M_muxs_in[GEN_muxs0*(3'h4)+(3'h4)-1-:(3'h4)]),
      .out(M_muxs_out[GEN_muxs0*(1)+(1)-1-:(1)])
    );
  end
  endgenerate
  
  always @* begin
    M_muxs_in = {5'h10{{alufn_signal[0+3-:4]}}};
    M_muxs_s0 = a;
    M_muxs_s1 = b;
    bool = M_muxs_out;
  end
endmodule
